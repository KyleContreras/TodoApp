import { basename, posix } from 'path';
function outputOptions(assetsDir) {
    // Internal: Avoid nesting entrypoints unnecessarily.
    const outputFileName = (ext) => ({ name }) => {
        if (!name) {
            return;
        }
        const shortName = basename(name).split('.')[0];
        return posix.join(assetsDir, `${shortName}.[hash].${ext}`);
    };
    return {
        entryFileNames: outputFileName('js'),
        chunkFileNames: outputFileName('js'),
        assetFileNames: outputFileName('[ext]'),
    };
}
export default function ViteDotNetPlugin(entrypoint, port = 5173, appFolder = "ClientApp") {
    return ViteDotNet({ port, appFolder: appFolder, entrypoint: entrypoint });
}
function ViteDotNet(config) {
    return {
        name: 'ViteDotNet',
        enforce: "post",
        config: (userConfig /*, { command, mode }*/) => {
            //https://vitejs.dev/config/server-options.html#server-origin
            return {
                server: {
                    origin: `http://localhost:${config.port}`,
                    port: config.port,
                    strictPort: true,
                    /*proxy:{
                      '*' : {
                        target: 'https://localhost:7167',
                        changeOrigin: true
                      }
                    },*/
                    hmr: {
                        protocol: 'ws'
                    }
                },
                build: {
                    outDir: `../wwwroot`,
                    emptyOutDir: true,
                    manifest: `${config.appFolder}/manifest.json`,
                    rollupOptions: {
                        // overwrite default .html entry
                        input: config.entrypoint,
                        output: outputOptions(config.appFolder)
                    }
                }
            };
        }
    };
}
;
